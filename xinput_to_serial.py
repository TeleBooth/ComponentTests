#processes events generated by XInput, shortens the data, and transmits them to serial port
#transmits as follows:
# |- identifier -|- data
# |-  2 bytes   -|- 1b or 2b
#
#identifier - two characters that identify the thing changing state
#data - 2 bytes if a stick event, 1 byte otherwise
#	for buttons, data is 1 byte with 0 == released, 1 == pressed
#	for triggers, data is 1 byte in range [0,255], 0 == released, 255 == depressed
#	for sticks, data is 2 bytes, x coordinate followed by y coordinate
#				x,y always lie within a circle of radius 127 (x,y in range [-127,127])
#

import serial
import XInput

#returns short string for button events
def buttonStr( e ):
	switcher = {
		1:		"b\'DU\'",#"DPAD_UP"
		2: 		"b\'DD\'",#"DPAD_DOWN"
		4:  	"b\'DL\'",#"DPAD_LEFT"
		8:		"b\'DR\'",#"DPAD_RIGHT"
		16: 	"b\'ST\'",#"START"
		32: 	"b\'BK\'",#"BACK"
		64: 	"b\'LT\'",#"LEFT_THUMB"
		128: 	"b\'RT\'",#"RIGHT_THUMB"
		256: 	"b\'LS\'",#"LEFT_SHOULDER"
		512: 	"b\'RS\'",#"RIGHT_SHOULDER"
		4096: 	"b\'AB\'",#"A"
		8192: 	"b\'BB\'",#"B"
		16384: 	"b\'XB\'",#"X"
		32768: 	"b\'YB\'" #"Y"
	}
	return switcher.get(e.button_id,"?")
 
port = serial.Serial('COM5',74480,timeout=0)
#XInput.set_vibration(0,0.1,0.1)

while 1:
	events = XInput.get_events()
	for e in events:
		#write button string, then current state
		if e.type == XInput.EVENT_BUTTON_PRESSED:
			#port.write(e.button.encode())
			port.write((buttonStr(e) + "1").encode())
			print((buttonStr(e) + "1").encode())
			#port.write(1)
			#print(1)
			
		elif e.type == XInput.EVENT_BUTTON_RELEASED:
			#port.write(e.button.encode())
			port.write((buttonStr(e) + "0").encode())
			print((buttonStr(e) + "0").encode())
			#port.write(0)
			#print(0)
			
		#write trigger left or right, then current position (0 = released, 255 = held)
		elif e.type == XInput.EVENT_TRIGGER_MOVED:
			if e.trigger == XInput.LEFT:
				port.write("TL".encode())
				print("TL".encode())
			else:
				port.write("TR".encode())
				print("TR".encode())
				
			#port.write(int(e.value*255.).to_bytes(1,"little"))
			print(int(e.value * 255.).to_bytes(1, "little"))
		#write stick left or right, then current x coordinate, then y coordinate
		#coordinates are in range -127 to 127
		elif e.type == XInput.EVENT_STICK_MOVED:
			if e.stick == XInput.LEFT:
				port.write("SL".encode())
				print("SL".encode())
			else:
				port.write("SR".encode())
				print("SR".encode())
				
			port.write(int(e.x*127.).to_bytes(1,"little",signed=True))
			port.write(int(e.y*127.).to_bytes(1,"little",signed=True))
			print(int(e.x*127.).to_bytes(1, "little", signed=True))
			print(int(e.y*127.).to_bytes(1, "little", signed=True))
